# Generated by Django 4.1.3 on 2023-01-06 07:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_title', models.CharField(max_length=150)),
                ('publishing_year', models.IntegerField()),
                ('author', models.CharField(max_length=100)),
                ('plot', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='IDCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.FileField(upload_to='')),
                ('status', models.CharField(max_length=10)),
                ('modified_on', models.DateTimeField()),
                ('modified_by', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Institution_name', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'institution',
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('problem_statment_type', models.TextField()),
                ('file_upload', models.FileField(upload_to='')),
                ('upload_time', models.DateTimeField()),
                ('status', models.CharField(max_length=10)),
                ('modified_on', models.DateTimeField()),
                ('modified_by', models.DateTimeField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'solution',
            },
        ),
        migrations.CreateModel(
            name='ProblemStatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
                ('statment', models.TextField()),
                ('solution_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.solution')),
            ],
            options={
                'db_table': 'problem_statment',
            },
        ),
        migrations.CreateModel(
            name='MainParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teamleadname', models.CharField(max_length=50)),
                ('college_id', models.FileField(upload_to=main.models.user_directory_path)),
                ('phone', models.CharField(max_length=15)),
                ('modified_on', models.DateTimeField()),
                ('modified_by', models.DateTimeField()),
                ('institution_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.institution')),
                ('problem_statement_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.problemstatment')),
                ('solution_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.solution')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'main_participant',
            },
        ),
    ]
